---
## General

# current stable version
# https://github.com/Comcast/trickster/releases/download/v0.1.10/trickster-0.1.10.linux-amd64.gz
# trickster_version: '0.1.10'
# trickster_file_version: '0.1.10'

# upcomming version
# https://github.com/Comcast/trickster/releases/download/v1.09-beta9/trickster-1.0.9.linux-amd64.gz
trickster_version: '1.09-beta9'
trickster_file_version: '1.0.9'

trickster_system_user: trickster
trickster_system_group: trickster

trickster_bin: /usr/local/bin/trickster

trickster_service_state: started

# listen_port defines the port on which Trickster's Proxy server listens.
# since this is a proxy for Prometheus, we use 9090 by default, just like Prometheus does
trickster_proxy_server_listen_port: 9090
# listen_port = 9090
# listen_address defines the ip on which Trickster's Proxy server listens.
# empty by default, listening on all interfaces
trickster_proxy_server_listen_address: '0.0.0.0'

# listen_port defines the port that Trickster's metrics server listens on at /metrics
trickster_metrics_listen_port: 8082
# listen_address defines the ip that Trickster's metrics server listens on at /metrics
# empty by default, listening on all interfaces
trickster_metrics_listen_address: '0.0.0.0'

# Possible values are 'debug', 'info', 'warn', 'error'
# default is info
trickster_log_level: info

# origin_url provides the base upstream URL for all proxied requests to this origin.
# it can be as simple as http://example.com or as complex as https://example.com:8443/path/prefix
# origin_url is a required configuration value
trickster_origin_url: 'http://127.0.0.1:9091'

# origin_type identifies the origin type.
# Valid options are: 'prometheus', 'influxdb', 'irondb', 'reverseproxycache' (or just 'rpc')
# origin_type is a required configuration value
trickster_origin_type: prometheus

# options are 'bbolt', 'badger', 'filesystem', 'memory', and 'redis'
# The default is 'memory'.
trickster_cache_type: 'memory'

# client_type indicates which kind of Redis client to use. Options are: 'standard', 'cluster' and 'sentinel'
# default is 'standard'
trickster_cache_redis_client_type: 'standard'

# These configurations are ignored by Redis Sentinel and Redis Cluster
# protocol defines the protocol for connecting to redis ('unix' or 'tcp') 'tcp' is default
trickster_cache_redis_protocol: 'tcp'

# endpoint defines the fqdn+port or path to a unix socket file for connecting to redis
# default is 'redis:6379'
trickster_cache_redis_endpoint: '127.0.0.1:6379'

# Supported by Redis Cluster and Redis Sentinel
# These conigurations are ignored by Redis (standard)
# endpoints is used for Redis Cluster and Redis Sentinel to define a list of endpoints
trickster_cache_redis_endpoints: []
#  - 'redis1:6379'
#  - 'redis2:6379'

# These conigurations are ignored by Redis (standard) and Redis Cluster
# sentinel_master should be set when using Redis Sentinel to indicate the Master Node
trickster_cache_redis_sentinel_master: ''

# password provides the redis password
# default is empty
trickster_cache_redis_password: ''

# db is the Database to be selected after connecting to the server. default is 0
trickster_cache_redis_db: 0
